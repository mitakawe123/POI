Какво трябва да се направи

Класифициране на документи
Минимум на 1000 документа с алгоритмичната парадигма manager/workers

Направил съм структурата на проекта и синхронично през една нишка чета файлове в data папката

Твоята задача е да довършиш и добавиш паралелна обработка към тези файлове с manager/workers pattern

Целта на този pattern е да има един manager (в повечето случаи) който само разпределя работата (файловете) на workers (останалите нишки)

Тук имаш два подхода които може да избереш

1. Да направиш един manager (който ще е в main.cpp) и останалото ще е workers (които ще са в worker.cpp)
2. Да направиш няколко managers и останалото да е workers

Нека managers да е фиксирано а workers динамично спрямо машината (аз препоръчвам първия подход)

Flow-a на приложението ще е следния

1. Взимаш файл през manager (main.cpp файла)
2. Подаваш го на най малко натоварения worker (worker.cpp файла) - ще ползваме прост алгоритъм и взимаме най малко файлове в опашката на worker-a
3. След това се подава на класифаяра (classifier.cpp файла) който ще има за цел да обработи документа и да го върне на worker-a (тази логика тук ще е измислена за да симулираме някаква работа)
4. Крайна стъпка worker-a връща резултата 

!!! Всичко това трябва да се случва паралелно когато една нишка започне не я чакаш (fire and forget) 
!!! Направо взимаш следващия файл и търсиш най малко натоварения worker 
!!! Използвай OpenMP тъй като се ползва на лекциите и сигурно ще го искат

Полезна информация:

1. Няма смисъл да правиш конкурентни колекции като mutex защото ще го направим една нишка да си движи сама опашката от файлове която има
2. Направил съм run.sh който ще ти генерира build папка и ще стартира проекта (използвай го вместо да пишеш всеки път команди)
3. Може да помислиш как ще хендълваме грешки от различните worker-и
